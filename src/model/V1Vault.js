/*
 * Skyflow
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@skyflow.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

import {V1Query} from './V1Query';
import {V1VaultType} from './V1VaultType';

/**
 * The V1Vault model module.
 * @module model/V1Vault
 * @version v1
 */
export class V1Vault {
  /**
   * Constructs a new <code>V1Vault</code>.
   * @alias module:model/V1Vault
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>V1Vault</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/V1Vault} obj Optional instance to populate.
   * @return {module:model/V1Vault} The populated <code>V1Vault</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new V1Vault();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('ID'))
        obj.ID = ApiClient.convertToType(data['ID'], 'String');
      if (data.hasOwnProperty('interfaces'))
        obj.interfaces = ApiClient.convertToType(data['interfaces'], ['String']);
      if (data.hasOwnProperty('queries'))
        obj.queries = ApiClient.convertToType(data['queries'], [V1Query]);
      if (data.hasOwnProperty('type'))
        obj.type = V1VaultType.constructFromObject(data['type']);
    }
    return obj;
  }
}

/**
 * Name of the Vault with AlphaNumeric Characters to uniquely identify a Vault within an Org
 * @member {String} name
 */
V1Vault.prototype.name = undefined;

/**
 * Description for the Vault
 * @member {String} description
 */
V1Vault.prototype.description = undefined;

/**
 * This will be generated by Server and cannot be user generated
 * @member {String} ID
 */
V1Vault.prototype.ID = undefined;

/**
 * Different Ways the Vault can be accessed. The names are mapped to ID in Metadatas Vault Interfaces Endpoint. This affects the way data is stored, so cannot be updated after creation.
 * @member {Array.<String>} interfaces
 */
V1Vault.prototype.interfaces = undefined;

/**
 * Frequently executed queries which user might want to save at the Vault level
 * @member {Array.<module:model/V1Query>} queries
 */
V1Vault.prototype.queries = undefined;

/**
 * Type of the Vault - Tokenized or Analytical
 * @member {module:model/V1VaultType} type
 */
V1Vault.prototype.type = undefined;


