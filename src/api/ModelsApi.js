/*
 * Skyflow
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * Contact: support@skyflow.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

import {V1GetNotebookTypeModelsResponse} from '../model/V1GetNotebookTypeModelsResponse';
import {V1GetResidencyModelsResponse} from '../model/V1GetResidencyModelsResponse';
import {V1GetScopesModelsResponse} from '../model/V1GetScopesModelsResponse';
import {V1GetVaultInterfacesModelsResponse} from '../model/V1GetVaultInterfacesModelsResponse';

/**
* Models service.
* @module api/ModelsApi
* @version v1
*/
const ModelsApi = {


    /**
     * Callback function to receive the result of the getNotebookTypesModels operation.
     * @callback module:api/ModelsApi~getNotebookTypesModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1GetNotebookTypeModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Pre-Defined Notebook Types
     * Gets the list of Supported Pre-Defined Notebook Types
     * @param {module:api/ModelsApi~getNotebookTypesModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1GetNotebookTypeModelsResponse}
     */
    getNotebookTypesModels(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['AppID', 'AppSecret', 'Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = V1GetNotebookTypeModelsResponse;

      return this.callApi(
        '/v1/models/notebooks/types', 'GET',
        pathParams, postBody,
        returnType, callback
      );
    },

    /**
     * Callback function to receive the result of the getResidencyModels operation.
     * @callback module:api/ModelsApi~getResidencyModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1GetResidencyModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Geo-Residency Matrix
     * Gets the list supported georesidency matrix
     * @param {module:api/ModelsApi~getResidencyModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1GetResidencyModelsResponse}
     */
    getResidencyModels(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['AppID', 'AppSecret', 'Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = V1GetResidencyModelsResponse;

      return this.callApi(
        '/v1/models/residency', 'GET',
        pathParams, postBody,
        returnType, callback
      );
    },

    /**
     * Callback function to receive the result of the getScopesModels operation.
     * @callback module:api/ModelsApi~getScopesModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1GetScopesModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Supported Scopes
     * Gets the list supported scopes
     * @param {module:api/ModelsApi~getScopesModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1GetScopesModelsResponse}
     */
    getScopesModels(callback) {
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['AppID', 'AppSecret', 'Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = V1GetScopesModelsResponse;

      return this.callApi(
        '/v1/models/scopes', 'GET',
        pathParams, postBody,
        returnType, callback
      );
    },

    /**
     * Callback function to receive the result of the getVaultInterfacesModels operation.
     * @callback module:api/ModelsApi~getVaultInterfacesModelsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1GetVaultInterfacesModelsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Vault Interfaces
     * Gets the list of Supported Vault Interfaces needed for Create Vault Call
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.vaultType Get Interfaces based on Vault Type.   - NONE: Should not be used  - TOKEN: Tokenized Vault - Supports Token based data Look-Up  - ANALYTICAL: Supports traditional SQL and Rest Paradigm for working with Data. (default to NONE)
     * @param {module:api/ModelsApi~getVaultInterfacesModelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1GetVaultInterfacesModelsResponse}
     */
    getVaultInterfacesModels(opts, callback) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'vaultType': opts['vaultType']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['AppID', 'AppSecret', 'Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = V1GetVaultInterfacesModelsResponse;

      return this.callApi(
        '/v1/models/vaults/interfaces', 'GET',
        pathParams, postBody,
        returnType, callback
      );
    },


}
export default ModelsApi

