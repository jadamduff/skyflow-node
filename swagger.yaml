{
  "swagger": "2.0",
  "info": {
    "title": "Skyflow",
    "version": "v1",
    "contact": {
      "name": "Skyflow",
      "url": "https://skyflow.com/",
      "email": "support@skyflow.com"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/applications": {
      "get": {
        "summary": "Search Applications",
        "description": "Streams Applications which matches the conditions set in query parameters",
        "operationId": "SearchApplicationsByFilter",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetApplicationResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination Offset.  - indicates from which record number to start retrieving data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "0"
          },
          {
            "name": "limit",
            "description": "Pagination Limit.  - indicates how many records to retrieve",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "100"
          }
        ],
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "Find out more about Applications.",
          "url": "https://readme.skyflow.com/reference/application"
        }
      },
      "post": {
        "summary": "Create Application",
        "description": "Creates a new Application",
        "operationId": "CreateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateApplicationRequest"
            }
          }
        ],
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "Find out more about Applications.",
          "url": "https://readme.skyflow.com/reference/application"
        }
      }
    },
    "/v1/applications/{ID}": {
      "get": {
        "summary": "Get Application By ID",
        "description": "Retreives an Application by Provided ID",
        "operationId": "GetApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "Find out more about Applications.",
          "url": "https://readme.skyflow.com/reference/application"
        }
      },
      "delete": {
        "summary": "Delete Application",
        "description": "Deletes an Application by Provided ID",
        "operationId": "DeleteApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "Find out more about Applications.",
          "url": "https://readme.skyflow.com/reference/application"
        }
      },
      "put": {
        "summary": "Update Application",
        "description": "Updates an Application by Provided ID",
        "operationId": "UpdateApplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateApplicationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateApplicationRequest"
            }
          }
        ],
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "Find out more about Applications.",
          "url": "https://readme.skyflow.com/reference/application"
        }
      }
    },
    "/v1/applications/{ID}/reveal": {
      "post": {
        "summary": "Reveals Application Secret",
        "description": "This allows the user to look at the Application's secret for the given Application ID",
        "operationId": "RevealApplicationSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RevealApplicationSecretResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Applications"
        ],
        "externalDocs": {
          "description": "Find out more about Applications.",
          "url": "https://readme.skyflow.com/reference/application"
        }
      }
    },
    "/v1/models/notebooks/types": {
      "get": {
        "summary": "Get Pre-Defined Notebook Types",
        "description": "Gets the list of Supported Pre-Defined Notebook Types",
        "operationId": "GetNotebookTypesModels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetNotebookTypeModelsResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetNotebookTypeModelsResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "tags": [
          "Models"
        ],
        "externalDocs": {
          "description": "Find out more about Models.",
          "url": "https://readme.skyflow.com/reference/models"
        }
      }
    },
    "/v1/models/residency": {
      "get": {
        "summary": "Geo-Residency Matrix",
        "description": "Gets the list supported georesidency matrix",
        "operationId": "GetResidencyModels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetResidencyModelsResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetResidencyModelsResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "501": {
            "description": "This API is currently not supported.",
            "schema": {},
            "x-number": 100
          }
        },
        "tags": [
          "Models"
        ],
        "externalDocs": {
          "description": "Find out more about Models.",
          "url": "https://readme.skyflow.com/reference/models"
        }
      }
    },
    "/v1/models/scopes": {
      "get": {
        "summary": "Supported Scopes",
        "description": "Gets the list supported scopes",
        "operationId": "GetScopesModels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetScopesModelsResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetScopesModelsResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "501": {
            "description": "This API is currently not supported.",
            "schema": {},
            "x-number": 100
          }
        },
        "tags": [
          "Models"
        ],
        "externalDocs": {
          "description": "Find out more about Models.",
          "url": "https://readme.skyflow.com/reference/models"
        }
      }
    },
    "/v1/models/vaults/interfaces": {
      "get": {
        "summary": "Get Vault Interfaces",
        "description": "Gets the list of Supported Vault Interfaces needed for Create Vault Call",
        "operationId": "GetVaultInterfacesModels",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetVaultInterfacesModelsResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetVaultInterfacesModelsResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "vaultType",
            "description": "Get Interfaces based on Vault Type.\n\n - NONE: Should not be used\n - TOKEN: Tokenized Vault - Supports Token based data Look-Up\n - ANALYTICAL: Supports traditional SQL and Rest Paradigm for working with Data.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "NONE",
              "TOKEN",
              "ANALYTICAL"
            ],
            "default": "NONE"
          }
        ],
        "tags": [
          "Models"
        ],
        "externalDocs": {
          "description": "Find out more about Models.",
          "url": "https://readme.skyflow.com/reference/models"
        }
      }
    },
    "/v1/notebooks": {
      "get": {
        "summary": "Search Notebooks",
        "description": "Streams Notebooks which matches the conditions set in query parameters.",
        "operationId": "SearchNotebooksByFilter",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetNotebookResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetNotebookResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination Offset.  - indicates from which record number to start retrieving data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "0"
          },
          {
            "name": "limit",
            "description": "Pagination Limit.  - indicates how many records to retrieve",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "100"
          },
          {
            "name": "orgID",
            "description": "Organization ID Under which resource should be searched.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "vaultID",
            "description": "Vault ID Under which this resource should be searched.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Notebooks"
        ],
        "externalDocs": {
          "description": "Find out more about Notebook.",
          "url": "https://readme.skyflow.com/reference/notebook"
        }
      },
      "post": {
        "summary": "Create Notebook",
        "description": "Creates a Notebook by using Information from body",
        "operationId": "CreateNotebook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateNotebookResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateNotebookRequest"
            }
          }
        ],
        "tags": [
          "Notebooks"
        ],
        "externalDocs": {
          "description": "Find out more about Notebook.",
          "url": "https://readme.skyflow.com/reference/notebook"
        }
      }
    },
    "/v1/notebooks/{ID}": {
      "get": {
        "summary": "Get Notebook By ID",
        "description": "Retreives a Notebook by Provided ID.",
        "operationId": "GetNotebook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetNotebookResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Notebooks"
        ],
        "externalDocs": {
          "description": "Find out more about Notebook.",
          "url": "https://readme.skyflow.com/reference/notebook"
        }
      },
      "delete": {
        "summary": "Delete Notebook",
        "description": "Deletes a Notebook by Provided ID.",
        "operationId": "DeleteNotebook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteNotebookResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Notebooks"
        ],
        "externalDocs": {
          "description": "Find out more about Notebook.",
          "url": "https://readme.skyflow.com/reference/notebook"
        }
      },
      "put": {
        "summary": "Update Notebook",
        "description": "Updates a Notebook by Provided ID.",
        "operationId": "UpdateNotebook",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateNotebookResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "501": {
            "description": "This API is currently not supported.",
            "schema": {},
            "x-number": 100
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateNotebookRequest"
            }
          }
        ],
        "tags": [
          "Notebooks"
        ],
        "externalDocs": {
          "description": "Find out more about Notebook.",
          "url": "https://readme.skyflow.com/reference/notebook"
        }
      }
    },
    "/v1/organizations": {
      "get": {
        "summary": "Search Organizations",
        "description": "Streams Organizations which matches the conditions set in query parameters",
        "operationId": "SearchOrganizationsByFilter",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetOrganizationResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetOrganizationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Organization Name.  - using which we need to fetch records",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "description": "Pagination Offset.  - indicates from which record number to start retrieving data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "0"
          },
          {
            "name": "limit",
            "description": "Pagination Limit.  - indicates how many records to retrieve",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "100"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "externalDocs": {
          "description": "Find out more about organization",
          "url": "https://readme.skyflow.com/reference/organization"
        }
      },
      "post": {
        "summary": "Create Organization",
        "description": "Create an Organization. This also internally creates a Master API Key which can be used to access all resources and sub-resources of this Organization",
        "operationId": "CreateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOrganizationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "externalDocs": {
          "description": "Find out more about organization",
          "url": "https://readme.skyflow.com/reference/organization"
        }
      }
    },
    "/v1/organizations/{ID}": {
      "get": {
        "summary": "Get Organization By ID",
        "description": "Retreives an Organization using the provided ID",
        "operationId": "GetOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetOrganizationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "externalDocs": {
          "description": "Find out more about organization",
          "url": "https://readme.skyflow.com/reference/organization"
        }
      },
      "delete": {
        "summary": "Delete Organization",
        "description": "Deletes Organization and its child entities with the given ID",
        "operationId": "DeleteOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOrganizationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Organizations"
        ],
        "externalDocs": {
          "description": "Find out more about organization",
          "url": "https://readme.skyflow.com/reference/organization"
        }
      },
      "put": {
        "summary": "Update Organization",
        "description": "Updates Organization with the given ID",
        "operationId": "UpdateOrganization",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateOrganizationResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateOrganizationRequest"
            }
          }
        ],
        "tags": [
          "Organizations"
        ],
        "externalDocs": {
          "description": "Find out more about organization",
          "url": "https://readme.skyflow.com/reference/organization"
        }
      }
    },
    "/v1/policies": {
      "get": {
        "summary": "Search Policies",
        "description": "Streams Policies which matches the conditions set in query parameters and using Information from Additional Resource Headers or fallsback to Access Token",
        "operationId": "SearchPoliciesByFilter",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetPolicyResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetPolicyResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination Offset.  - indicates from which record number to start retrieving data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "0"
          },
          {
            "name": "limit",
            "description": "Pagination Limit.  - indicates how many records to retrieve",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "100"
          },
          {
            "name": "policy.resource.ID",
            "description": "Resource ID. Resource to which policies are being defined",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy.resource.type",
            "description": "Resource Type. Type of a Resource being Defined\n\n - NONE: is undefined and should not be used.\n - ORGANIZATION: Indicates the Resource Type to be Organization.\n - VAULT: Indicates the Resource Type to be Vault.\n - NOTEBOOK: Indicates the Resource Type to be Notebook.",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "NONE",
              "ORGANIZATION",
              "VAULT",
              "NOTEBOOK"
            ],
            "default": "NONE"
          },
          {
            "name": "policy.actor.ID",
            "description": "Actor ID. Actor for whom policies are being defined",
            "in": "query",
            "required": true,
            "type": "string"
          },
          {
            "name": "policy.actor.type",
            "description": "Actor Type. Type of an Actor being Defined\n\n - NONE: is undefined and should not be used.\n - USER: Indicates the Actor for Policy mapping is User.\n - APPLICATION: Indicates the Actor for Policy mapping is Application.",
            "in": "query",
            "required": true,
            "type": "string",
            "enum": [
              "NONE",
              "USER",
              "APPLICATION"
            ],
            "default": "NONE"
          },
          {
            "name": "policy.permissions",
            "description": "Permissions. List of applicable permissions for given resource\n\n - NONE: is undefined and should not be used.\n - VIEWER: has Read-Only Permissions to the Resource.\n - ADMIN: has Administrative Permissions to the Resource.\n - DEVELOPER: has access to Modify the Data but not Manage the Resource Settings.",
            "in": "query",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "NONE",
                "VIEWER",
                "ADMIN",
                "DEVELOPER"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "policy.ID",
            "description": "ID of this Policy. This will be generated by Server and cannot be user generated",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "Find out more about Policy.",
          "url": "https://readme.skyflow.com/reference/policies"
        }
      },
      "post": {
        "summary": "Create Policy",
        "description": "Creates a Policy by using Information provided in Request",
        "operationId": "CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreatePolicyResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreatePolicyRequest"
            }
          }
        ],
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "Find out more about Policy.",
          "url": "https://readme.skyflow.com/reference/policies"
        }
      }
    },
    "/v1/policies/{ID}": {
      "get": {
        "summary": "Get Policy By ID",
        "description": "Retreives a Policy by Provided ID.",
        "operationId": "GetPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetPolicyResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "Find out more about Policy.",
          "url": "https://readme.skyflow.com/reference/policies"
        }
      },
      "delete": {
        "summary": "Delete Policy",
        "description": "Deletes a Policy",
        "operationId": "DeletePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeletePolicyResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "Find out more about Policy.",
          "url": "https://readme.skyflow.com/reference/policies"
        }
      },
      "put": {
        "summary": "Update Policy",
        "description": "Updates a Policy by Provided ID.",
        "operationId": "UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePolicyResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdatePolicyRequest"
            }
          }
        ],
        "tags": [
          "Policies"
        ],
        "externalDocs": {
          "description": "Find out more about Policy.",
          "url": "https://readme.skyflow.com/reference/policies"
        }
      }
    },
    "/v1/query": {
      "post": {
        "summary": "Query Records",
        "description": "Retrieves list of Records by using Notebook Information from Request and Post Body",
        "operationId": "Query",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1QueryResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1QueryResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "501": {
            "description": "This API is currently not supported.",
            "schema": {},
            "x-number": 100
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1QueryRequest"
            }
          }
        ],
        "tags": [
          "Records"
        ],
        "externalDocs": {
          "description": "Find out more about Record APIs.",
          "url": "https://readme.skyflow.com/reference/records"
        }
      }
    },
    "/v1/records": {
      "post": {
        "summary": "Create Record",
        "description": "Creates a Record by using Notebook Information from Request and Post Body",
        "operationId": "InsertRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateRecordResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRecordRequest"
            }
          }
        ],
        "tags": [
          "Records"
        ],
        "externalDocs": {
          "description": "Find out more about Record APIs.",
          "url": "https://readme.skyflow.com/reference/records"
        }
      }
    },
    "/v1/records/{ID}": {
      "get": {
        "summary": "Get Record",
        "description": "Retrieves a Record by using ID and Notebook Information from Request.",
        "operationId": "GetRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetRecordResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "notebookID",
            "description": "Notebook ID Under which this resource should be retrieved.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Records"
        ],
        "externalDocs": {
          "description": "Find out more about Record APIs.",
          "url": "https://readme.skyflow.com/reference/records"
        }
      },
      "delete": {
        "summary": "Delete Record",
        "description": "Deletes a Record by using ID and Notebook Information from Request.",
        "operationId": "DeleteRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRecordResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "notebookID",
            "description": "Notebook ID Under which this resource should be deleted.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Records"
        ],
        "externalDocs": {
          "description": "Find out more about Record APIs.",
          "url": "https://readme.skyflow.com/reference/records"
        }
      },
      "put": {
        "summary": "Update Record",
        "description": "Updates a Record by using ID, Notebook Information from Request and Put Body",
        "operationId": "UpdateRecord",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateRecordResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateRecordRequest"
            }
          }
        ],
        "tags": [
          "Records"
        ],
        "externalDocs": {
          "description": "Find out more about Record APIs.",
          "url": "https://readme.skyflow.com/reference/records"
        }
      }
    },
    "/v1/tokens": {
      "post": {
        "summary": "Create Token",
        "description": "Creates a Token by using Notebook Information from body",
        "operationId": "CreateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateTokenResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateTokenRequest"
            }
          }
        ],
        "tags": [
          "Tokens"
        ],
        "externalDocs": {
          "description": "Find out more about Tokens.",
          "url": "https://readme.skyflow.com/reference/token"
        }
      }
    },
    "/v1/tokens/{tokenID}": {
      "get": {
        "summary": "Get Token By ID",
        "description": "Retreives Token belonging to ID.",
        "operationId": "GetToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetTokenResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Tokens"
        ],
        "externalDocs": {
          "description": "Find out more about Tokens.",
          "url": "https://readme.skyflow.com/reference/token"
        }
      },
      "delete": {
        "summary": "Delete Token",
        "description": "Deletes Token belonging to ID.",
        "operationId": "DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteTokenResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Tokens"
        ],
        "externalDocs": {
          "description": "Find out more about Tokens.",
          "url": "https://readme.skyflow.com/reference/token"
        }
      },
      "put": {
        "summary": "Update Token",
        "description": "Updates Token belonging to ID.",
        "operationId": "UpdateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateTokenResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "tokenID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateTokenRequest"
            }
          }
        ],
        "tags": [
          "Tokens"
        ],
        "externalDocs": {
          "description": "Find out more about Tokens.",
          "url": "https://readme.skyflow.com/reference/token"
        }
      }
    },
    "/v1/users": {
      "get": {
        "summary": "Search Users",
        "description": "Streams Users which matches the conditions set in query parameters and using Information from Additional Resource Headers or fallsback to Access Token",
        "operationId": "SearchUsersByFilter",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetUserResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetUserResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination Offset.  - indicates from which record number to start retrieving data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "0"
          },
          {
            "name": "limit",
            "description": "Pagination Limit.  - indicates how many records to retrieve",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "100"
          },
          {
            "name": "userIdentity.email",
            "description": "Email Address. Email Address of the User",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userIdentity.oktaID",
            "description": "Okta ID. Okta ID Generated for the User",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ID",
            "description": "ID to uniquely identify an User.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "Find out more about User.",
          "url": "https://readme.skyflow.com/reference/user"
        }
      },
      "post": {
        "summary": "Create User",
        "description": "Creates an User by using Information from Additional Resource Headers or fallsback to Access Token",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "Find out more about User.",
          "url": "https://readme.skyflow.com/reference/user"
        }
      }
    },
    "/v1/users/{ID}": {
      "get": {
        "summary": "Get User By ID",
        "description": "Retreives a User by Provided ID.",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "Find out more about User.",
          "url": "https://readme.skyflow.com/reference/user"
        }
      },
      "delete": {
        "summary": "Delete User",
        "description": "Deletes an User",
        "operationId": "DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "Find out more about User.",
          "url": "https://readme.skyflow.com/reference/user"
        }
      },
      "put": {
        "summary": "Update User",
        "description": "Updates an User by Provided ID.",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "Users"
        ],
        "externalDocs": {
          "description": "Find out more about User.",
          "url": "https://readme.skyflow.com/reference/user"
        }
      }
    },
    "/v1/vaults": {
      "get": {
        "summary": "Search Vaults",
        "description": "Streams Vaults which matches the conditions set in query parameters.",
        "operationId": "SearchVaultsByFilter",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1GetVaultResponse"
                },
                "error": {
                  "$ref": "#/definitions/runtimeStreamError"
                }
              },
              "title": "Stream result of v1GetVaultResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Pagination Offset.  - indicates from which record number to start retrieving data",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "0"
          },
          {
            "name": "limit",
            "description": "Pagination Limit.  - indicates how many records to retrieve",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64",
            "default": "100"
          },
          {
            "name": "vaultName",
            "description": "Vault Name.  - using which we need to fetch records",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgID",
            "description": "Organization ID Under which resource should be searched.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vaults"
        ],
        "externalDocs": {
          "description": "Find out more about Vault.",
          "url": "https://readme.skyflow.com/reference/vault"
        }
      },
      "post": {
        "summary": "Create Vault",
        "description": "Creates a Vault by using Organization Information from body",
        "operationId": "CreateVault",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateVaultResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateVaultRequest"
            }
          }
        ],
        "tags": [
          "Vaults"
        ],
        "externalDocs": {
          "description": "Find out more about Vault.",
          "url": "https://readme.skyflow.com/reference/vault"
        }
      }
    },
    "/v1/vaults/{ID}": {
      "get": {
        "summary": "Get Vault By ID",
        "description": "Retreives a Vault by Provided ID.",
        "operationId": "GetVault",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetVaultResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Vaults"
        ],
        "externalDocs": {
          "description": "Find out more about Vault.",
          "url": "https://readme.skyflow.com/reference/vault"
        }
      },
      "delete": {
        "summary": "Delete Vault",
        "description": "Deletes Vault and its child entities with the given ID.",
        "operationId": "DeleteVault",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteVaultResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Vaults"
        ],
        "externalDocs": {
          "description": "Find out more about Vault.",
          "url": "https://readme.skyflow.com/reference/vault"
        }
      },
      "put": {
        "summary": "Update Vault",
        "description": "Updates a Vault by Provided ID.",
        "operationId": "UpdateVault",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateVaultResponse"
            }
          },
          "400": {
            "description": "Returned when the request object sent contains validation errors",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Cu$t0mer_Vault name passed must contain only alphanumeric characters",
                "code": 400,
                "type": "Validation",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "401": {
            "description": "Returned when the Bearer Token is not Valid/Expired or not Authorized to access the Requested Resource",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "User Kishore is not authorized to access Vault Employee",
                "code": 401,
                "type": "Authentication",
                "detailed_message": "The Actual error (if any) that could have caused this issue"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          },
          "404": {
            "description": "Returned when the resource does not exist.",
            "schema": {
              "type": "string",
              "format": "string"
            }
          },
          "500": {
            "description": "Returned when an unexpected error occurred in our services. Please contact Administrator.",
            "schema": {
              "type": "object",
              "format": "object",
              "example": {
                "message": "Unexpected Error occurred. Please contact Administrator",
                "code": 500,
                "type": "Network",
                "detailed_message": "PrivacyDB call Failed - Unavailable"
              },
              "description": "Defines the structure of the Error Object",
              "title": "Error"
            }
          }
        },
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateVaultRequest"
            }
          }
        ],
        "tags": [
          "Vaults"
        ],
        "externalDocs": {
          "description": "Find out more about Vault.",
          "url": "https://readme.skyflow.com/reference/vault"
        }
      }
    }
  },
  "definitions": {
    "ApplicationApplicationStatus": {
      "type": "string",
      "enum": [
        "NONE",
        "ACTIVE",
        "INACTIVE"
      ],
      "default": "NONE",
      "description": "- NONE: NONE is undefined and should not be used.",
      "title": "ApplicationStatus - Defines the current application status, if activated or not"
    },
    "NotebookField": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Field with AlphaNumeric Characters to uniquely identify a Column in the Vault",
          "title": "Field Name",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9]+$",
          "required": [
            "name"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for the Field which can be used for UI Rendering",
          "title": "Display Name"
        },
        "type": {
          "$ref": "#/definitions/v1FieldType",
          "description": "Type of Data saved in the Field",
          "title": "Field Type"
        },
        "description": {
          "type": "string",
          "description": "More Content about the Field",
          "title": "Field Description"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1NotebookOperation"
          },
          "description": "Defines the list of Operation that are allowed to be performed on the Field - Aggregation like SUM(), Etc.",
          "title": "Operations",
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "operations"
          ]
        },
        "status": {
          "$ref": "#/definitions/NotebookFieldStatus",
          "description": "Defines if the Field is Enabled or Disabled",
          "title": "Status"
        },
        "alias": {
          "type": "string",
          "description": "Used for External Widgets for mapping a field with a different name, so response will contain alias instead of name",
          "title": "Alias"
        },
        "provenance": {
          "type": "boolean",
          "format": "boolean",
          "description": "Defines if a field should be audited or not",
          "title": "Provenance"
        },
        "custom": {
          "type": "boolean",
          "format": "boolean",
          "description": "A Custom Notebook, Instead of Pre-Defined Field",
          "title": "Custom User-Defined Field"
        }
      }
    },
    "NotebookFieldStatus": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "default": "ENABLED"
    },
    "PolicyPermissions": {
      "type": "string",
      "enum": [
        "NONE",
        "VIEWER",
        "ADMIN",
        "DEVELOPER"
      ],
      "default": "NONE",
      "description": " - NONE: is undefined and should not be used.\n - VIEWER: has Read-Only Permissions to the Resource.\n - ADMIN: has Administrative Permissions to the Resource.\n - DEVELOPER: has access to Modify the Data but not Manage the Resource Settings."
    },
    "TokenAccessControlAccessControl": {
      "type": "string",
      "enum": [
        "NONE",
        "TTL_7_DAYS",
        "ADMIN"
      ],
      "default": "NONE",
      "description": " - NONE: NONE is undefined and should not be used."
    },
    "UserUserStatus": {
      "type": "string",
      "enum": [
        "NONE",
        "ACTIVE",
        "INACTIVE"
      ],
      "default": "NONE",
      "description": "- NONE: NONE is undefined and should not be used.",
      "title": "UserStatus - Defines the current user status, if activated or not"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "runtimeStreamError": {
      "type": "object",
      "properties": {
        "grpc_code": {
          "type": "integer",
          "format": "int32"
        },
        "http_code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "http_status": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Actor": {
      "type": "object",
      "example": {
        "ID": "mb057d4c570011ea89d9acde48001122",
        "type": "USER"
      },
      "properties": {
        "ID": {
          "type": "string",
          "description": "Actor for whom policies are being defined ",
          "title": "Actor ID",
          "required": [
            "ID"
          ]
        },
        "type": {
          "$ref": "#/definitions/v1ActorType",
          "description": "Type of an Actor being Defined",
          "title": "Actor Type",
          "required": [
            "type"
          ]
        }
      }
    },
    "v1ActorType": {
      "type": "string",
      "enum": [
        "NONE",
        "USER",
        "APPLICATION"
      ],
      "default": "NONE",
      "description": " - NONE: is undefined and should not be used.\n - USER: Indicates the Actor for Policy mapping is User.\n - APPLICATION: Indicates the Actor for Policy mapping is Application."
    },
    "v1Address": {
      "type": "object",
      "properties": {
        "streetAddress": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "zip": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "v1Application": {
      "type": "object",
      "example": {
        "name": "Employee Application",
        "description": "This Application has Read-Only access to Employee Vault",
        "ID": "f2400b6h2c9c55ea8bkdttte48004578",
        "status": "ACTIVE"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of this Application",
          "title": "Application Name",
          "required": [
            "name"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description for this Application",
          "title": "Application Description"
        },
        "ID": {
          "type": "string",
          "description": "This will be generated by Server and cannot be user generated",
          "title": "ID to uniquely identify an Application",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/ApplicationApplicationStatus",
          "description": "Status of the Application if Active or InActive",
          "title": "Application Status"
        }
      }
    },
    "v1CreateApplicationRequest": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1Application"
        },
        "orgID": {
          "type": "string",
          "title": "Organization ID Under which resource should be searched"
        }
      }
    },
    "v1CreateApplicationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID of the Application that was Created"
        }
      }
    },
    "v1CreateNotebookRequest": {
      "type": "object",
      "properties": {
        "notebook": {
          "$ref": "#/definitions/v1Notebook"
        },
        "vaultID": {
          "type": "string",
          "title": "Vault ID Under which this resource should be created"
        }
      }
    },
    "v1CreateNotebookResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID of the Notebook that was Created"
        }
      }
    },
    "v1CreateOrganizationRequest": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1Organization"
        }
      }
    },
    "v1CreateOrganizationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID of the Organization that was Created"
        }
      }
    },
    "v1CreatePolicyRequest": {
      "type": "object",
      "example": {
        "policy": {
          "resource": {
            "ID": "g2400b4c4c9c11ea8baaacde48001122",
            "type": "VAULT"
          },
          "actor": {
            "ID": "mb057d4c570011ea89d9acde48001122",
            "type": "USER"
          },
          "permissions": [
            "ADMIN"
          ]
        }
      },
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1Policy"
        }
      }
    },
    "v1CreatePolicyResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "The Unique ID of the Policy that was Created"
        }
      }
    },
    "v1CreateRecordRequest": {
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/v1Record"
        },
        "notebookID": {
          "type": "string",
          "title": "Notebook ID Under which this resource should be created"
        }
      }
    },
    "v1CreateRecordResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID for the entire record that was created"
        }
      }
    },
    "v1CreateTokenRequest": {
      "type": "object",
      "example": {
        "object": {
          "Name": "Kishore",
          "Email": "kishore.bandi@skyflow.com",
          "SSN": "123-34-5678",
          "DOB": "19-10-1989",
          "Salary": 983764
        },
        "fieldLevelPolicies": {
          "Name": {
            "accessControls": [
              "TTL_7_DAYS"
            ]
          },
          "DOB": {
            "accessControls": [
              "ADMIN"
            ]
          }
        },
        "notebookID": "d4aa4fb2595111eab4bf8a8c033dfbd2"
      },
      "properties": {
        "object": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fieldLevelPolicies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1TokenPolicy"
          }
        },
        "notebookID": {
          "type": "string"
        }
      }
    },
    "v1CreateTokenResponse": {
      "type": "object",
      "example": {
        "objectTokenID": "obj_aj794jdfnsdubaneo3u43n23fm",
        "tokenizedObject": {
          "Name": "tok_jshdf84hkjlwfohbn23jk5",
          "Email": "tok_sdkjsdo09alk2n89on32njk",
          "SSN": "tok_3rsdhf832iuojkhasdjv0vj",
          "DOB": "tok_askj983289yuehjmckldsl",
          "Salary": "tok_mnn703oasjklsb18xzds8j"
        }
      },
      "properties": {
        "objectTokenID": {
          "type": "string",
          "title": "Unique Token for the entire object sent"
        },
        "tokenizedObject": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "example": {
        "orgID": "g2400b4c4c9c11ea8baaacde48001122",
        "user": {
          "name": "Daniel",
          "contactAddress": {
            "streetAddress": "9876 E E Avenue",
            "city": "Sunnyvalue",
            "state": "CA",
            "country": "USA",
            "zip": 94086
          },
          "userIdentity": {
            "email": "kishore.bandi@skyflow.com",
            "oktaID": "00j9y3tpmj4kHfX4z739",
            "ID": "mb057d4c570011ea89d9acde48001122"
          },
          "status": "ACTIVE",
          "policies": [
            {
              "resourceID": "g2400b4c4c9c11ea8baaacde48001122",
              "resouceType": "vault",
              "permissions": [
                "READ"
              ]
            }
          ]
        }
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "orgID": {
          "type": "string",
          "title": "Organization ID Under which user should be created"
        }
      }
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "The Unique ID of the User that was Created"
        }
      }
    },
    "v1CreateVaultRequest": {
      "type": "object",
      "example": {
        "orgID": "g2400b4c4c9c11ea8baaacde48001122",
        "vault": {
          "name": "EmployeeVault",
          "description": "Stores information about Employees",
          "interfaces": [
            "SQL",
            "REST"
          ],
          "type": "ANALYTICAL"
        },
        "notebooks": [
          {
            "name": "Identity",
            "template": "Identity",
            "fields": [
              {
                "name": "first_name",
                "displayName": "first name",
                "description": "name",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "last_name",
                "displayName": "last name",
                "description": "name",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "address",
                "displayName": "Address",
                "type": "ADDRESS",
                "description": "Address",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "email",
                "displayName": "E-Mail",
                "type": "EMAIL",
                "description": "email",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "ssn",
                "displayName": "US Social Security Number",
                "type": "SSN",
                "description": "US Social Security Number",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "tin",
                "displayName": "US Tax Identification Number",
                "type": "SSN",
                "description": "US Tax Identification Number",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "passport_number",
                "displayName": "Passport Number",
                "type": "SSN",
                "description": "Passport Number",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              },
              {
                "name": "driver_licence_number",
                "displayName": "Driver Licence Number",
                "type": "SSN",
                "description": "Driver Licence Number",
                "operations": [
                  "EXACT_MATCH"
                ],
                "provenance": true
              }
            ]
          }
        ]
      },
      "properties": {
        "vault": {
          "$ref": "#/definitions/v1Vault"
        },
        "notebooks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Notebook"
          }
        },
        "orgID": {
          "type": "string",
          "title": "Organization ID Under which resource should be searched"
        }
      }
    },
    "v1CreateVaultResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID of the Vault that was Created"
        }
      }
    },
    "v1DeleteApplicationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of Deleted Application"
        }
      }
    },
    "v1DeleteNotebookResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of Deleted Notebook"
        }
      }
    },
    "v1DeleteOrganizationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of Deleted Organization"
        }
      },
      "title": "Contains status of delete operation"
    },
    "v1DeletePolicyResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of Deleted Policy"
        }
      }
    },
    "v1DeleteRecordResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID for the entire record that was Deleted"
        }
      }
    },
    "v1DeleteTokenResponse": {
      "type": "object",
      "properties": {
        "tokenID": {
          "type": "string",
          "title": "Deleted Token ID"
        }
      }
    },
    "v1DeleteUserResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of Deleted User"
        }
      }
    },
    "v1DeleteVaultResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of Deleted Vault"
        }
      }
    },
    "v1FieldData": {
      "type": "object",
      "example": {
        "name": "first_name",
        "value": "Kishore"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Field",
          "title": "Name",
          "required": [
            "name"
          ]
        },
        "value": {
          "type": "string",
          "description": "Value of the Field",
          "title": "Value",
          "required": [
            "value"
          ]
        }
      }
    },
    "v1FieldType": {
      "type": "string",
      "enum": [
        "STRING",
        "INTEGER",
        "FLOAT",
        "DATE",
        "TIME",
        "GENDER",
        "ADDRESS",
        "USERNAME",
        "PHONE",
        "CITY",
        "COUNTRY",
        "SSN",
        "PASSPORT",
        "EMAIL",
        "PRIMARY_KEY"
      ],
      "default": "STRING",
      "description": "- PRIMARY_KEY: Will be string(uuid) primary key (composite keys are not currently supported)",
      "title": "TODO: Validate data types"
    },
    "v1FieldTypeData": {
      "type": "object",
      "example": {
        "name": "first_name",
        "value": "Kishore",
        "type": "STRING"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Field",
          "title": "Name",
          "required": [
            "name"
          ]
        },
        "value": {
          "type": "string",
          "description": "Value of the Field",
          "title": "Value",
          "required": [
            "value"
          ]
        },
        "type": {
          "$ref": "#/definitions/v1FieldType",
          "description": "Data Type of the Field",
          "title": "Type",
          "required": [
            "type"
          ]
        }
      }
    },
    "v1GetApplicationResponse": {
      "type": "object",
      "properties": {
        "apiKey": {
          "$ref": "#/definitions/v1Application"
        }
      }
    },
    "v1GetNotebookResponse": {
      "type": "object",
      "properties": {
        "notebook": {
          "$ref": "#/definitions/v1Notebook"
        }
      }
    },
    "v1GetNotebookTypeModelsResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "description": "This should be mapped to Types[] during Create Vault Call",
          "title": "ID of the Vault Type"
        },
        "name": {
          "type": "string",
          "title": "Name for this Vault Type"
        },
        "description": {
          "type": "string",
          "title": "Description for this Vault Type"
        },
        "iconURL": {
          "type": "string",
          "title": "Icon for this Vault Type"
        },
        "learnMoreURL": {
          "type": "string",
          "title": "URL Containing More Information for this Vault Type"
        },
        "notebookSchema": {
          "$ref": "#/definitions/v1Notebook",
          "title": "Schema for the corresponding Notebook"
        }
      }
    },
    "v1GetOrganizationResponse": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1Organization"
        }
      },
      "title": "Contains read request response"
    },
    "v1GetPolicyResponse": {
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "#/definitions/v1Policy"
        }
      }
    },
    "v1GetRecordResponse": {
      "type": "object",
      "properties": {
        "record": {
          "$ref": "#/definitions/v1Record"
        }
      }
    },
    "v1GetResidencyModelsResponse": {
      "type": "object"
    },
    "v1GetScopesModelsResponse": {
      "type": "object"
    },
    "v1GetTokenResponse": {
      "type": "object",
      "example": {
        "object": {
          "SSN": "123-34-5678"
        }
      },
      "properties": {
        "object": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1GetVaultInterfacesModelsResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "description": "This should be mapped to Interfaces[] during Create Vault Call",
          "title": "ID of the Vault Capability"
        },
        "name": {
          "type": "string",
          "title": "Name for this Vault Capability"
        },
        "description": {
          "type": "string",
          "title": "Description for this Vault Capability"
        },
        "iconURL": {
          "type": "string",
          "title": "Icon for this Vault Capability"
        },
        "learnMoreURL": {
          "type": "string",
          "title": "URL Containing More Information for this Vault Capability"
        },
        "available": {
          "type": "boolean",
          "format": "boolean",
          "title": "Defines if this Vault Capability is currently supported or not"
        }
      }
    },
    "v1GetVaultResponse": {
      "type": "object",
      "properties": {
        "vault": {
          "$ref": "#/definitions/v1Vault"
        }
      }
    },
    "v1Notebook": {
      "type": "object",
      "example": {
        "name": "Employee",
        "template": "Employee",
        "fields": [
          {
            "name": "first_name",
            "displayName": "first name",
            "description": "name",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "last_name",
            "displayName": "last name",
            "description": "name",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "address",
            "displayName": "Address",
            "type": "ADDRESS",
            "description": "Address",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "salary",
            "displayName": "salary",
            "type": "FLOAT",
            "description": "salary",
            "operations": [
              "EXACT_MATCH",
              "AGGREGATE"
            ],
            "provenance": true
          },
          {
            "name": "gender",
            "displayName": "gender",
            "type": "GENDER",
            "description": "gender",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "username",
            "displayName": "username",
            "type": "USERNAME",
            "description": "User Name",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "age",
            "displayName": "age",
            "type": "INTEGER",
            "description": "Age",
            "operations": [
              "EXACT_MATCH",
              "AGGREGATE"
            ],
            "provenance": true
          },
          {
            "name": "email",
            "displayName": "E-Mail",
            "type": "EMAIL",
            "description": "email",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "dob",
            "displayName": "Date Of Birth",
            "type": "EMAIL",
            "description": "Date Of Birth",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          },
          {
            "name": "company",
            "displayName": "Company",
            "type": "EMAIL",
            "description": "Company",
            "operations": [
              "EXACT_MATCH"
            ],
            "provenance": true
          }
        ],
        "ID": "d4aa4fb2595111eab4bf8a8c033dfbd2"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Notebook with AlphaNumeric Characters to uniquely identify a Notebook within a Vault",
          "title": "Notebook Name",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9]+$",
          "required": [
            "name"
          ]
        },
        "template": {
          "type": "string",
          "description": "A Custom Name provided by User to identify the Notebook",
          "title": "Custom Name"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotebookField"
          },
          "description": " List of Fields/Attributes that the Notebook should have",
          "title": "Fields",
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "fields"
          ]
        },
        "ID": {
          "type": "string",
          "description": "This will be generated by Server and cannot be user generated",
          "title": "ID to uniquely identify a Vault",
          "readOnly": true
        },
        "custom": {
          "type": "boolean",
          "format": "boolean",
          "description": "A Custom Notebook, Instead of Pre-Defined Notebook",
          "title": "Custom User-Defined"
        }
      }
    },
    "v1NotebookOperation": {
      "type": "string",
      "enum": [
        "EXACT_MATCH",
        "RANGE",
        "AGGREGATE",
        "UNENCRYPTED",
        "RANDOM",
        "RANGE_OPE",
        "RANGE_ORE"
      ],
      "default": "EXACT_MATCH",
      "title": "- UNENCRYPTED: This should only be used with primary key fields and cannot be used in combination with other encryption types\n - RANDOM: Same plaintext should result in different ciphertexts when encrypted\n - RANGE_OPE: Order-preserving encryption for integers\n - RANGE_ORE: Order-revealing"
    },
    "v1Organization": {
      "type": "object",
      "example": {
        "name": "Skyflow",
        "displayName": "Skyflow Org.",
        "description": "Main Account for Managing Skyflow Organization",
        "ID": "g2400b4c4c9c11ea8baaacde48001122"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Organization with AlphaNumeric Characters to uniquely identify an Org",
          "title": "Organization Name",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9]+$",
          "required": [
            "name"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "Display Name for the Organization which can be used for UI Rendering",
          "title": "Display Name"
        },
        "description": {
          "type": "string",
          "description": "Description for the Organization",
          "title": "Description"
        },
        "contactAddress": {
          "$ref": "#/definitions/v1Address",
          "description": "Contact Address for the Organization",
          "title": "Contact Address"
        },
        "ID": {
          "type": "string",
          "description": "This will be generated by Server and cannot be user generated",
          "title": "ID to uniquely identify an Organization",
          "readOnly": true
        }
      }
    },
    "v1Policy": {
      "type": "object",
      "example": {
        "resource": {
          "ID": "g2400b4c4c9c11ea8baaacde48001122",
          "type": "VAULT"
        },
        "actor": {
          "ID": "mb057d4c570011ea89d9acde48001122",
          "type": "USER"
        },
        "permissions": [
          "ADMIN"
        ]
      },
      "properties": {
        "resource": {
          "$ref": "#/definitions/v1Resource",
          "description": "Resource for which policy is being defined ",
          "title": "Resource",
          "required": [
            "resource"
          ]
        },
        "actor": {
          "$ref": "#/definitions/v1Actor",
          "description": "Actor for whom policy is being defined ",
          "title": "Actor",
          "required": [
            "actor"
          ]
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyPermissions"
          },
          "description": "List of applicable permissions for given resource",
          "title": "Permissions",
          "minItems": 1,
          "required": [
            "permissions"
          ]
        },
        "ID": {
          "type": "string",
          "description": "This will be generated by Server and cannot be user generated",
          "title": "ID of this Policy",
          "readOnly": true
        }
      }
    },
    "v1Query": {
      "type": "object",
      "example": {
        "name": "Get Total Salary by age for Non-Skyflow",
        "description": "select sum(salary), age from employee where company != 'skyflow' group by age"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for the Query",
          "title": "Name"
        },
        "query": {
          "type": "string",
          "description": "Actual Query saved against the name",
          "title": "Query"
        }
      },
      "title": "Query - The Query saved for a vault/user"
    },
    "v1QueryRequest": {
      "type": "object",
      "example": {
        "query": "select sum(salary), department from employee where salary \u003e 5000 group by department"
      },
      "properties": {
        "query": {
          "type": "string",
          "description": "SQL Query to fire for retrieving data",
          "title": "Query",
          "required": [
            "query"
          ]
        }
      }
    },
    "v1QueryResponse": {
      "type": "object",
      "example": [
        [
          {
            "name": "salary__sum",
            "value": 49716,
            "type": "INTEGER"
          },
          {
            "name": "department",
            "value": "Engineering",
            "type": "STRING"
          }
        ],
        [
          {
            "name": "salary__sum",
            "value": 89716,
            "type": "INTEGER"
          },
          {
            "name": "department",
            "value": "Human Resources",
            "type": "STRING"
          }
        ]
      ],
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Row"
          }
        }
      }
    },
    "v1Record": {
      "type": "object",
      "example": {
        "ID": "la83hdkw92h4asudcjsd3",
        "fields": [
          {
            "name": "first_name",
            "value": "Kishore"
          },
          {
            "name": "last_name",
            "value": "Bandi"
          },
          {
            "name": "email",
            "value": "bandikishores@gmail.com"
          }
        ]
      },
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique Identifier for the entire record",
          "readOnly": true
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FieldData"
          },
          "title": "List of fields in this Record",
          "minItems": 1,
          "required": [
            "fields"
          ]
        }
      }
    },
    "v1Resource": {
      "type": "object",
      "example": {
        "ID": "g2400b4c4c9c11ea8baaacde48001122",
        "type": "VAULT"
      },
      "properties": {
        "ID": {
          "type": "string",
          "description": "Resource to which policies are being defined ",
          "title": "Resource ID",
          "required": [
            "ID"
          ]
        },
        "type": {
          "$ref": "#/definitions/v1ResourceType",
          "description": "Type of a Resource being Defined",
          "title": "Resource Type",
          "required": [
            "type"
          ]
        }
      }
    },
    "v1ResourceType": {
      "type": "string",
      "enum": [
        "NONE",
        "ORGANIZATION",
        "VAULT",
        "NOTEBOOK"
      ],
      "default": "NONE",
      "description": " - NONE: is undefined and should not be used.\n - ORGANIZATION: Indicates the Resource Type to be Organization.\n - VAULT: Indicates the Resource Type to be Vault.\n - NOTEBOOK: Indicates the Resource Type to be Notebook."
    },
    "v1RevealApplicationSecretResponse": {
      "type": "object",
      "example": {
        "applicationSecret": "v6vXoZ31D9x4pV27wg56-S34ZlV_q4hbA58w5wbwbHlh4ZtkIiHbRKaUl7itmUCPsd="
      },
      "properties": {
        "applicationSecret": {
          "type": "string"
        }
      }
    },
    "v1Row": {
      "type": "object",
      "example": [
        {
          "name": "salary__sum",
          "value": 49716,
          "type": "INTEGER"
        },
        {
          "name": "department",
          "value": "Engineering",
          "type": "STRING"
        }
      ],
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FieldTypeData"
          }
        }
      }
    },
    "v1TokenAccessControl": {
      "type": "object",
      "example": {
        "accessControls": [
          "TTL_7_DAYS",
          "ADMIN"
        ]
      },
      "properties": {
        "accessControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TokenAccessControlAccessControl"
          }
        }
      }
    },
    "v1TokenPolicy": {
      "type": "object",
      "example": {
        "Name": {
          "accessControls": [
            "TTL_7_DAYS"
          ]
        },
        "DOB": {
          "accessControls": [
            "ADMIN"
          ]
        }
      },
      "properties": {
        "object": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1TokenAccessControl"
          }
        }
      }
    },
    "v1UpdateApplicationRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID to uniquely update an Application"
        },
        "apiKey": {
          "$ref": "#/definitions/v1Application"
        }
      }
    },
    "v1UpdateApplicationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Updated Application"
        }
      }
    },
    "v1UpdateNotebookRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID to uniquely update a Notebook"
        },
        "notebook": {
          "$ref": "#/definitions/v1Notebook"
        }
      }
    },
    "v1UpdateNotebookResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Updated Notebook"
        }
      }
    },
    "v1UpdateOrganizationRequest": {
      "type": "object",
      "properties": {
        "organization": {
          "$ref": "#/definitions/v1Organization",
          "title": "entity to update"
        },
        "ID": {
          "type": "string",
          "title": "ID to uniquely update an Organization"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Request data to update todo task"
    },
    "v1UpdateOrganizationResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Updated Organization"
        }
      },
      "title": "Contains status of update operation"
    },
    "v1UpdatePolicyRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID to uniquely update a Policy"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PolicyPermissions"
          },
          "description": "List of applicable permissions to Replace with for given resource",
          "title": "Permissions",
          "minItems": 1,
          "required": [
            "permissions"
          ]
        }
      }
    },
    "v1UpdatePolicyResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Updated Policy"
        }
      }
    },
    "v1UpdateRecordRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Record to Update",
          "readOnly": true
        },
        "notebookID": {
          "type": "string",
          "title": "Notebook ID Under which this resource should be updated"
        },
        "record": {
          "$ref": "#/definitions/v1Record"
        }
      }
    },
    "v1UpdateRecordResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "Unique ID for the entire record that was updated"
        }
      }
    },
    "v1UpdateTokenRequest": {
      "type": "object",
      "example": {
        "object": {
          "Name": "Kishore Bandi",
          "Email": "kishore.bandi@prekarilabs.com",
          "Salary": 1083764
        },
        "fieldLevelPolicies": {
          "Name": {
            "acl": [
              "NO_EXPIRE"
            ]
          }
        }
      },
      "properties": {
        "tokenID": {
          "type": "string",
          "title": "Token ID to Update"
        },
        "object": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "fieldLevelPolicies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1TokenPolicy"
          }
        }
      }
    },
    "v1UpdateTokenResponse": {
      "type": "object",
      "example": {
        "objectTokenID": "obj_aj794jdfnsdubaneo3u43n23fm",
        "tokenizedObject": {
          "Name": "tok_jshdf84hkjlwfohbn23jk5",
          "Email": "tok_sdkjsdo09alk2n89on32njk",
          "Salary": "tok_mnn703oasjklsb18xzds8j"
        }
      },
      "properties": {
        "objectTokenID": {
          "type": "string",
          "title": "Unique Token for the entire object sent"
        },
        "tokenizedObject": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "v1UpdateUserRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID to uniquely update an User"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        }
      }
    },
    "v1UpdateUserResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Updated User"
        }
      }
    },
    "v1UpdateVaultRequest": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID to uniquely update a Vault"
        },
        "vault": {
          "$ref": "#/definitions/v1Vault"
        }
      }
    },
    "v1UpdateVaultResponse": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "string",
          "title": "ID of the Updated Vault"
        }
      }
    },
    "v1User": {
      "type": "object",
      "example": {
        "name": "kishorebandi",
        "contactAddress": {
          "streetAddress": "9876 E E Avenue",
          "city": "Sunnyvalue",
          "state": "CA",
          "country": "USA",
          "zip": 94086
        },
        "userIdentity": {
          "email": "kishore.bandi@skyflow.com",
          "oktaID": "00j9y3tpmj4kHfX4z739",
          "ID": "mb057d4c570011ea89d9acde48001122"
        },
        "status": "ACTIVE"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for the User",
          "title": "Name"
        },
        "contactAddress": {
          "$ref": "#/definitions/v1Address",
          "description": "Contact Address for the User",
          "title": "Contact Address"
        },
        "userIdentity": {
          "$ref": "#/definitions/v1UserIdentity",
          "description": "Unique Identifiers of the User",
          "title": "User Access",
          "required": [
            "userIdentity"
          ]
        },
        "status": {
          "$ref": "#/definitions/UserUserStatus",
          "description": "Defines if a User is Active or Inactive",
          "title": "User Status"
        },
        "ID": {
          "type": "string",
          "description": "This will be generated by Server and cannot be user generated",
          "title": "ID to uniquely identify an User",
          "readOnly": true
        }
      }
    },
    "v1UserIdentity": {
      "type": "object",
      "example": {
        "email": "kishore.bandi@skyflow.com",
        "oktaID": "00j9y3tpmj4kHfX4z739",
        "ID": "mb057d4c570011ea89d9acde48001122"
      },
      "properties": {
        "email": {
          "type": "string",
          "description": "Email Address of the User",
          "title": "Email Address"
        },
        "oktaID": {
          "type": "string",
          "description": "Okta ID Generated for the User",
          "title": "Okta ID"
        }
      }
    },
    "v1Vault": {
      "type": "object",
      "example": {
        "name": "EmployeeVault",
        "description": "Stores information about Employees",
        "interfaces": [
          "tokenize",
          "sql"
        ],
        "type": "ANALYTICAL",
        "ID": "g2400b4c4c9c11ea8baaacde48001122"
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Vault with AlphaNumeric Characters to uniquely identify a Vault within an Org",
          "title": "Vault Name",
          "minLength": 1,
          "pattern": "^[A-Za-z0-9]+$",
          "required": [
            "name"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description for the Vault",
          "title": "Description"
        },
        "ID": {
          "type": "string",
          "description": "This will be generated by Server and cannot be user generated",
          "title": "ID to uniquely identify a Vault",
          "readOnly": true
        },
        "interfaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Different Ways the Vault can be accessed. The names are mapped to ID in Metadatas Vault Interfaces Endpoint. This affects the way data is stored, so cannot be updated after creation.",
          "title": "Vault Accessibility",
          "minItems": 1,
          "uniqueItems": true,
          "required": [
            "interfaces"
          ]
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Query"
          },
          "description": "Frequently executed queries which user might want to save at the Vault level",
          "title": "Saved Queries"
        },
        "type": {
          "$ref": "#/definitions/v1VaultType",
          "description": "Type of the Vault - Tokenized or Analytical",
          "title": "Type"
        }
      }
    },
    "v1VaultType": {
      "type": "string",
      "enum": [
        "NONE",
        "TOKEN",
        "ANALYTICAL"
      ],
      "default": "NONE",
      "description": " - NONE: Should not be used\n - TOKEN: Tokenized Vault - Supports Token based data Look-Up\n - ANALYTICAL: Supports traditional SQL and Rest Paradigm for working with Data."
    }
  },
  "securityDefinitions": {
    "AppID": {
      "type": "apiKey",
      "description": "This is the AppID which belongs to the Vault or Organization. For Org Level AppID, Please Contact Administrator.",
      "name": "X-SKYFLOW-APP-ID",
      "in": "header"
    },
    "AppSecret": {
      "type": "apiKey",
      "description": "This is the AppSecret for the AppId Passed. For Org Level entry, Please Contact Administrator.",
      "name": "X-SKYFLOW-APP-SECRET",
      "in": "header"
    },
    "Bearer": {
      "type": "apiKey",
      "description": "Access token, prefixed by Bearer: Bearer \u0026lt;token\u0026gt;. This is the Access Token retrieved from OKTA using https://auth.skyflow.com/ end-point",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "AppID": [],
      "AppSecret": [],
      "Bearer": []
    }
  ],
  "externalDocs": {
    "description": "More about Skyflow",
    "url": "https://readme.skyflow.com/reference/"
  }
}
